<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <bean id="aggregatorStrategy" class="com.eventhandler.core.aggregate.EventsAggregationStrategy"/>

    <bean id="idempotentRepo" class="org.apache.camel.processor.idempotent.hazelcast.HazelcastIdempotentRepository"
            c:hazelcastInstance-ref="hzInstance"
            c:repositoryName="idempotent"/>

    <bean id="aggregatorRepo" class="com.eventhandler.core.aggregate.HzAggregatorRepository"
            c:hazelcastInstance-ref="hzInstance"
            c:repositoryName="aggregator"/>

    <camel:camelContext>
        <camel:route>
            <camel:from uri="hazelcast:seda:events-queue?hazelcastInstance=hzInstance"/>
            <camel:log message="message: ${body}"/>
            <camel:convertBodyTo type="com.eventhandler.common.protocol.Event"/>
            <camel:log message="bean: ${body}"/>
            <camel:setHeader headerName="runId">
                <camel:simple>${body.runId}</camel:simple>
            </camel:setHeader>
            <camel:aggregate strategyRef="aggregatorStrategy"
                             aggregationRepositoryRef="aggregatorRepo"
                             completionSize="3">
                <camel:correlationExpression>
                    <camel:header>runId</camel:header>
                </camel:correlationExpression>
                <camel:log message="Sending out ${body}"/>
                <camel:split>
                    <camel:simple>${body}</camel:simple>
                    <camel:to uri="direct:idempotent"/>
                </camel:split>
            </camel:aggregate>
        </camel:route>

        <camel:route>
            <camel:from uri="direct:idempotent"/>
            <camel:idempotentConsumer messageIdRepositoryRef="idempotentRepo">
                <camel:header>runId</camel:header>
                <camel:to uri="direct:process"/>
            </camel:idempotentConsumer>
        </camel:route>

        <camel:route>
            <camel:from uri="direct:process"/>
            <camel:log message="process message: ${body}"/>
            <camel:to uri="mock:out"/>
        </camel:route>
    </camel:camelContext>

</beans>